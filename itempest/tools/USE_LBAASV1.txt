Sample script to experience how to configure LBaas V1 and testing it
====================================================================

from itempest import load_our_solar_system as osn
from itempest.lib import lib_net_aggr as netaggr
from itempest.lib import lib_networks

venus = osn.utils.get_mimic_manager_cli(osn.os_auth_url, "Venus", "itempest8@OS")

# create lb network and servers
from itempest.tools import build_lbaas_networks as lb_net
from itempest.tools import build_lbaas_v1 as lbaasv1

sun = osn.utils.get_mimic_manager_cli(osn.os_auth_url, 'Sun', 'itempest8@OS')

venus_lb_network = lb_net.setup_lb_network_and_servers(venus, 'lb-venus')
# if using VIO deployed ubuntu image ; then you should manually startup webserver
# venus_lb_network = lb_net.setup_lb_network_and_servers(venus, 'lb2-venus', flavor_id=2, username="root", password="vmware")
lb_net.start_webservers(venus_lb_network)

netaggr.show_toplogy(venus)

web_servers = [server for server_id, server in venus_lb_network['servers'].items()]
subnet = venus_lb_network['subnet']
mem_address_list=[wserv['fip']['fixed_ip_address'] for wserv in web_servers]
port = venus_lb_network['port']
security_group_id = venus_lb_network['security_group']['id']

# create lbaas load-balancer, listener, pool, monitor, member

venus_lb = lbaasv1.create_lbv1(venus, subnet, mem_address_list, prefix='lb-venus', protocol_port=port, ip_version=4)
venus_lb_vip = venus_lb['vip']
venus_vip_fip = lbaasv1.assign_floatingip_to_vip(venus, venus_lb_vip, security_group_id=security_group_id)

# sshc = lib_networks.create_ssh_client(venus_vip_fip["floating_ip_address”])
venus_web_ip = venus_vip_fip["floating_ip_address"]

# http "VIP address" for round-robin effects
ctx = lbaasv1.count_http_servers(venus_web_ip, 20)

# teardown
lbaasv1.delete_vip_resources(venus, venus_lb_vip['id'])

lib_network.destroy_all_resources(venus)


# Tenant Mars create health-monitory type=HTTP
mars = osn.utils.get_mimic_manager_cli(osn.os_auth_url, "Mars", "itempest8@OS")

mars_lb_network = lb_net.setup_lb_network_and_servers(mars, 'lb-mars')
lb_net.start_webservers(mars_lb_network)
netaggr.show_toplogy(mars)

web_servers = [server for server_id, server in mars_lb_network['servers'].items()]
subnet = mars_lb_network['subnet']
mem_address_list=[wserv['fip']['fixed_ip_address'] for wserv in web_servers]
port = mars_lb_network['port']
security_group_id = mars_lb_network['security_group']['id']

mars_lb = lbaasv1.create_lbv1(mars, subnet, mem_address_list,
        prefix='lb-mars', protocol_port=port, ip_version=4,
        monitor_type="HTTP")
mars_lb_vip = mars_lb['vip']
mars_vip_fip = lbaasv1.assign_floatingip_to_vip(mars, mars_lb_vip, security_group_id=security_group_id)

# sshc = lib_networks.create_ssh_client(vip_fip["floating_ip_address”])
mars_web_ip = mars_vip_fip["floating_ip_address"]

# http "VIP address" for round-robin effects
ctx = lbaasv1.count_http_servers(mars_web_ip, 20)

# teardown
lbaasv1.delete_vip_resources(venus, mars_lb_vip['id'])

lib_network.destroy_all_resources(mars)
